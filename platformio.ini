; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[common_samd21]
compile_flags = 
    ; Compile optimizations:
    ; -Os = Standard Arduino optimization.
    ; -O2 = Fast code, but large size.
    ; -O3 = Faster code, but larger size.
    ; -Ofast = Fastest code, but larger size.
    ; -Ofast -funroll-loops = Fastest code, largest size, & with loop unrolling. AKA "Here be dragons".
    -Ofast
    -DUSE_ABSTRACTION_LAYER
    ; CRC optimisation levels:
    ; 0 = Optimise for speed.
    ; 1 = Optimise for size.
    ; 2 = Use hardware CRC if available. Otherwise, optimise for speed.
    -DCRC_OPTIMISATION_LEVEL=0
    -DUSE_DMA
; CPU frequency, in Hz:
; 48000000L = 48 MHz (Default)
; Overclocking is not supported on SAMD21 boards.
cpu_speed = 48000000L
debugger = jlink
lib_deps =
    adafruit/Adafruit Zero DMA Library@^1.1.1
; Upload protocol:
; sam-ba = Native USB (Default)
; jlink = J-Link Debugger
sketch_upload_protocol = sam-ba

[common_samd51]
compile_flags = 
    ; Compile optimizations:
    ; -Os = Standard Arduino optimization.
    ; -O2 = Fast code, but large size.
    ; -O3 = Faster code, but larger size.
    ; -Ofast = Fastest code, but larger size.
    ; -Ofast -funroll-loops = Fastest code, largest size, & with loop unrolling. AKA "Here be dragons".
    -Ofast
    -DUSE_ABSTRACTION_LAYER
    ; CRC optimisation levels:
    ; 0 = Optimise for speed.
    ; 1 = Optimise for size.
    ; 2 = Use hardware CRC if available. Otherwise, optimise for speed.
    -DCRC_OPTIMISATION_LEVEL=0
    -DUSE_DMA
; CPU frequency, in Hz:
; 120000000L = 120 MHz (Default)
; 150000000L = 150 MHz (Overclock)
; 180000000L = 180 MHz (Overclock)
; 200000000L = 200 MHz (Maximum Overclock)
cpu_speed = 120000000L
debugger = jlink
lib_deps =
    adafruit/Adafruit Zero DMA Library@^1.1.1
; Upload protocol:
; sam-ba = Native USB (Default)
; jlink = J-Link Debugger
sketch_upload_protocol = sam-ba

[env]
framework = arduino
platform = atmelsam
build_src_filter =
    ;+<main_gps-telemetry.cpp>
    +<main_rc.cpp>

; Cortex M0+ boards:
[env:adafruit_feather_m0]
board = adafruit_feather_m0
board_build.f_cpu = ${common_samd21.cpu_speed}
build_flags = ${common_samd21.compile_flags}
lib_deps = ${common_samd21.lib_deps}
; Only use the native USB port for uploading:
upload_protocol = sam-ba

[env:adafruit_feather_m0_express]
board = adafruit_feather_m0_express
board_build.f_cpu = ${common_samd21.cpu_speed}
build_flags = ${common_samd21.compile_flags}
lib_deps = ${common_samd21.lib_deps}
; Only use the native USB port for uploading:
upload_protocol = sam-ba

[env:adafruit_itsybitsy_m0]
board = adafruit_itsybitsy_m0
board_build.f_cpu = ${common_samd21.cpu_speed}
build_flags = ${common_samd21.compile_flags}
lib_deps = ${common_samd21.lib_deps}
; Only use the native USB port for uploading:
upload_protocol = sam-ba

[env:adafruit_metro_m0]
board = adafruit_metro_m0
board_build.f_cpu = ${common_samd21.cpu_speed}
build_flags = ${common_samd21.compile_flags}
; Board has a SWD header. Use the selected tool for debugging:
debug_tool = ${common_samd21.debugger}
lib_deps = ${common_samd21.lib_deps}
; Use the selected sketch upload protocol:
upload_protocol = ${common_samd21.sketch_upload_protocol}

[env:mkrfox1200]
board = mkrfox1200
board_build.f_cpu = ${common_samd21.cpu_speed}
build_flags = ${common_samd21.compile_flags}
lib_deps = ${common_samd21.lib_deps}
; Only use the native USB port for uploading:
upload_protocol = sam-ba

[env:mkrgsm1400]
board = mkrgsm1400
board_build.f_cpu = ${common_samd21.cpu_speed}
build_flags = ${common_samd21.compile_flags}
lib_deps = ${common_samd21.lib_deps}
; Only use the native USB port for uploading:
upload_protocol = sam-ba

[env:mkrnb1500]
board = mkrnb1500
board_build.f_cpu = ${common_samd21.cpu_speed}
build_flags = ${common_samd21.compile_flags}
lib_deps = ${common_samd21.lib_deps}
; Only use the native USB port for uploading:
upload_protocol = sam-ba

[env:mkrvidor4000]
board = mkrvidor4000
board_build.f_cpu = ${common_samd21.cpu_speed}
build_flags = ${common_samd21.compile_flags}
lib_deps = ${common_samd21.lib_deps}
; Only use the native USB port for uploading:
upload_protocol = sam-ba

[env:mkrwan1300]
board = mkrwan1300
board_build.f_cpu = ${common_samd21.cpu_speed}
build_flags = ${common_samd21.compile_flags}
lib_deps = ${common_samd21.lib_deps}
; Only use the native USB port for uploading:
upload_protocol = sam-ba

[env:mkrwan1310]
board = mkrwan1310
board_build.f_cpu = ${common_samd21.cpu_speed}
build_flags = ${common_samd21.compile_flags}
lib_deps = ${common_samd21.lib_deps}
; Only use the native USB port for uploading:
upload_protocol = sam-ba

[env:mkrwifi1010]
board = mkrwifi1010
board_build.f_cpu = ${common_samd21.cpu_speed}
build_flags = ${common_samd21.compile_flags}
lib_deps = ${common_samd21.lib_deps}
; Only use the native USB port for uploading:
upload_protocol = sam-ba

[env:mkrzero]
board = mkrzero
board_build.f_cpu = ${common_samd21.cpu_speed}
build_flags = ${common_samd21.compile_flags}
lib_deps = ${common_samd21.lib_deps}
; Only use the native USB port for uploading:
upload_protocol = sam-ba

[env:seeed_xiao]
board = seeed_xiao
board_build.f_cpu = ${common_samd21.cpu_speed}
build_flags = ${common_samd21.compile_flags}
lib_deps = ${common_samd21.lib_deps}
; Only use the native USB port for uploading:
upload_protocol = sam-ba

[env:zero]
board = zero
board_build.f_cpu = ${common_samd21.cpu_speed}
build_flags = ${common_samd21.compile_flags}
; Board has an onboard EDBG debugger. Use CMSIS-DAP for debugging:
debug_tool = cmsis-dap
lib_deps = ${common_samd21.lib_deps}
; Board has an onboard EDBG debugger that uses CMSIS-DAP, so use that:
upload_protocol = cmsis-dap

[env:zeroUSB]
board = zeroUSB
board_build.f_cpu = ${common_samd21.cpu_speed}
build_flags = ${common_samd21.compile_flags}
; This is the same as the Arduino Zero, but with the native USB port enabled. So, use J-Link for debugging:
debug_tool = jlink
lib_deps = ${common_samd21.lib_deps}
; This is the same as the Arduino Zero, but with the native USB port enabled. So, use SAM-BA:
upload_protocol = sam-ba

; Cortex M4F boards:
[env:adafruit_feather_m4]
board = adafruit_feather_m4
board_build.f_cpu = ${common_samd51.cpu_speed}
build_flags = ${common_samd51.compile_flags}
; Board has a SWD header. Use the selected tool for debugging:
debug_tool = ${common_samd51.debugger}
lib_deps = ${common_samd51.lib_deps}
upload_protocol = ${common_samd51.sketch_upload_protocol}

[env:adafruit_feather_m4_can]
board = adafruit_feather_m4_can
board_build.f_cpu = ${common_samd51.cpu_speed}
build_flags = ${common_samd51.compile_flags}
lib_deps = ${common_samd51.lib_deps}
upload_protocol = ${common_samd51.sketch_upload_protocol}

[env:adafruit_grandcentral_m4]
board = adafruit_grandcentral_m4
board_build.f_cpu = ${common_samd51.cpu_speed}
build_flags = ${common_samd51.compile_flags}
; Board has a SWD header. Use the selected tool for debugging:
debug_tool = ${common_samd51.debugger}
lib_deps = ${common_samd51.lib_deps}
upload_protocol = ${common_samd51.sketch_upload_protocol}

[env:adafruit_itsybitsy_m4]
board = adafruit_itsybitsy_m4
board_build.f_cpu = ${common_samd51.cpu_speed}
build_flags = ${common_samd51.compile_flags}
lib_deps = ${common_samd51.lib_deps}
upload_protocol = ${common_samd51.sketch_upload_protocol}

[env:adafruit_metro_m4]
board = adafruit_metro_m4
board_build.f_cpu = ${common_samd51.cpu_speed}
build_flags = ${common_samd51.compile_flags}
; Board has a SWD header. Use the selected tool for debugging:
debug_tool = ${common_samd51.debugger}
lib_deps = ${common_samd51.lib_deps}
upload_protocol = ${common_samd51.sketch_upload_protocol}

[env:adafruit_metro_m4_airliftlite]
board = adafruit_metro_m4_airliftlite
board_build.f_cpu = ${common_samd51.cpu_speed}
build_flags = ${common_samd51.compile_flags}
; Board has a SWD header. Use the selected tool for debugging:
debug_tool = ${common_samd51.debugger}
lib_deps = ${common_samd51.lib_deps}
upload_protocol = ${common_samd51.sketch_upload_protocol}

[platformio]
default_envs = adafruit_metro_m0
include_dir = src/include
lib_dir = src/lib
src_dir = src/src
test_dir = src/test
